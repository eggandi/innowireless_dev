/** 
  * @file 
  * @brief 
  * @date 2021-12-30 
  * @author gyun 
  */


// 시스템 헤더 파일
#include <stddef.h>
#include <stdint.h>


/*
 * 최소개수(1) rectangular region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region rectangularRegion : {
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_min_rectangular_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x81, 0x01, 0x01, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35,
  0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C,
  0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_min_rectangular_region_cert_size = sizeof(g_min_rectangular_region_cert);


/*
 * 최대개수(kDot2RectangularRegionNum_Max=8) rectangular region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region rectangularRegion : {
      { northWest { latitude 374856151, longitude 1270392831 }, southEast { latitude 374856141, longitude 1270392841 } },
      { northWest { latitude 374856152, longitude 1270392832 }, southEast { latitude 374856142, longitude 1270392842 } },
      { northWest { latitude 374856153, longitude 1270392833 }, southEast { latitude 374856143, longitude 1270392843 } },
      { northWest { latitude 374856154, longitude 1270392834 }, southEast { latitude 374856144, longitude 1270392844 } },
      { northWest { latitude 374856155, longitude 1270392835 }, southEast { latitude 374856145, longitude 1270392845 } },
      { northWest { latitude 374856156, longitude 1270392836 }, southEast { latitude 374856146, longitude 1270392846 } },
      { northWest { latitude 374856157, longitude 1270392837 }, southEast { latitude 374856147, longitude 1270392847 } },
      { northWest { latitude 374856158, longitude 1270392838 }, southEast { latitude 374856148, longitude 1270392848 } }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_max_rectangular_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x81, 0x01, 0x08, 0x16, 0x57, 0xD9, 0xD7, 0x4B, 0xB8, 0xA7, 0xFF, 0x16, 0x57,
  0xD9, 0xCD, 0x4B, 0xB8, 0xA8, 0x09, 0x16, 0x57, 0xD9, 0xD8, 0x4B, 0xB8, 0xA8, 0x00, 0x16, 0x57,
  0xD9, 0xCE, 0x4B, 0xB8, 0xA8, 0x0A, 0x16, 0x57, 0xD9, 0xD9, 0x4B, 0xB8, 0xA8, 0x01, 0x16, 0x57,
  0xD9, 0xCF, 0x4B, 0xB8, 0xA8, 0x0B, 0x16, 0x57, 0xD9, 0xDA, 0x4B, 0xB8, 0xA8, 0x02, 0x16, 0x57,
  0xD9, 0xD0, 0x4B, 0xB8, 0xA8, 0x0C, 0x16, 0x57, 0xD9, 0xDB, 0x4B, 0xB8, 0xA8, 0x03, 0x16, 0x57,
  0xD9, 0xD1, 0x4B, 0xB8, 0xA8, 0x0D, 0x16, 0x57, 0xD9, 0xDC, 0x4B, 0xB8, 0xA8, 0x04, 0x16, 0x57,
  0xD9, 0xD2, 0x4B, 0xB8, 0xA8, 0x0E, 0x16, 0x57, 0xD9, 0xDD, 0x4B, 0xB8, 0xA8, 0x05, 0x16, 0x57,
  0xD9, 0xD3, 0x4B, 0xB8, 0xA8, 0x0F, 0x16, 0x57, 0xD9, 0xDE, 0x4B, 0xB8, 0xA8, 0x06, 0x16, 0x57,
  0xD9, 0xD4, 0x4B, 0xB8, 0xA8, 0x10, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35,
  0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C,
  0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_max_rectangular_region_cert_size = sizeof(g_max_rectangular_region_cert);


/*
 * 최대개수(kDot2RectangularRegionNum_Max=8)를 초과하는(9) rectangular region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region rectangularRegion : {
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } },
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } },
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } },
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } },
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } },
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } },
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } },
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } },
      { northWest { latitude 374856150, longitude 1270392830 }, southEast { latitude 374856150, longitude 1270392830 } }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_too_many_rectangular_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x81, 0x01, 0x09, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35,
  0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C,
  0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_too_many_rectangular_region_cert_size = sizeof(g_too_many_rectangular_region_cert);


/*
 * 최소 개수(3) 포인트 polygonal region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region polygonalRegion : {
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_min_polygonal_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x82, 0x01, 0x03, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x01, 0x01,
  0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25,
  0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51,
  0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_min_polygonal_region_cert_size = sizeof(g_min_polygonal_region_cert);


/*
 * 최대 개수(kDot2PolygonalPointNum_Max=8) 포인트 polygonal region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region polygonalRegion : {
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_max_polygonal_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x82, 0x01, 0x08, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35,
  0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C,
  0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_max_polygonal_region_cert_size = sizeof(g_max_polygonal_region_cert);


/*
 * 최대 개수(kDot2PolygonalPointNum_Max=8)를 초과하는(9) 포인트 polygonal region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region polygonalRegion : {
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 },
      { latitude 374856150, longitude 1270392830 }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_too_many_polygonal_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x82, 0x01, 0x09, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57,
  0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x01, 0x01,
  0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25,
  0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51,
  0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_too_many_polygonal_region_cert_size = sizeof(g_too_many_polygonal_region_cert);


/*
 * 최소개수(1) countryOnly identified region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : { -- countryOnly 유형의 identifiedRegion이 1개
      countryOnly : 180
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_min_country_only_identified_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82,
  0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9,
  0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_min_country_only_identified_region_cert_size = sizeof(g_min_country_only_identified_region_cert);


/*
 * 최대개수(kDot2IdentifiedRegionNum_Max=8) countryOnly identified region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : { -- countryOnly 유형의 identifiedRegion이 8개
      countryOnly : 180,
      countryOnly : 181,
      countryOnly : 182,
      countryOnly : 183,
      countryOnly : 184,
      countryOnly : 185,
      countryOnly : 186,
      countryOnly : 187
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_max_country_only_identified_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x08, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB5, 0x80, 0x00, 0xB6, 0x80,
  0x00, 0xB7, 0x80, 0x00, 0xB8, 0x80, 0x00, 0xB9, 0x80, 0x00, 0xBA, 0x80, 0x00, 0xBB, 0x01, 0x01,
  0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25,
  0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51,
  0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_max_country_only_identified_region_cert_size = sizeof(g_max_country_only_identified_region_cert);


/*
 * 최대개수(kDot2IdentifiedRegionNum_Max=8)를 초과하는(9) countryOnly identified region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : { -- countryOnly 유형의 identifiedRegion이 9개
      countryOnly : 180,
      countryOnly : 181,
      countryOnly : 182,
      countryOnly : 183,
      countryOnly : 184,
      countryOnly : 185,
      countryOnly : 186,
      countryOnly : 187,
      countryOnly : 188
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_too_many_country_only_identified_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x09, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB5, 0x80, 0x00, 0xB6, 0x80,
  0x00, 0xB7, 0x80, 0x00, 0xB8, 0x80, 0x00, 0xB9, 0x80, 0x00, 0xBA, 0x80, 0x00, 0xBB, 0x80, 0x00,
  0xBC, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94,
  0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1,
  0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_too_many_country_only_identified_region_cert_size = sizeof(g_too_many_country_only_identified_region_cert);


/*
 * 최소개수(1) countryAndRegions identified region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : { -- countryAndRegions 유형의 identifiedRegion이 1개
      countryAndRegions : {
        countryOnly 180,
        regions { 1 }
      }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_min_country_and_regions_identified_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x81, 0x00, 0xB4, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01,
  0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F,
  0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05,
  0x21, 0x81, 0x3B
};
size_t g_min_country_and_regions_identified_region_cert_size = sizeof(g_min_country_and_regions_identified_region_cert);


/*
 * 최소개수(1) countryAndSubregions identified region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : { -- countryAndSubregions 유형의 identifiedRegion이 1개
      countryAndSubregions : {
        country 180,
        regionAndSubregions {
          { region 1, subregions { 1 } }
        }
      }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_min_country_and_subregions_identified_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x82, 0x00, 0xB4, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01,
  0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82,
  0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3,
  0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_min_country_and_subregions_identified_region_cert_size = sizeof(g_min_country_and_subregions_identified_region_cert);


/*
 * 유형별 1개씩의 identified region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryOnly : 180,
      countryAndRegions : {
        countryOnly 180,
        regions { 1 }
      }
      countryAndSubregions : {
        country 180,
        regionAndSubregions {
          { region 1, subregions { 1 } }
        }
      }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_simple_identified_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x03, 0x80, 0x00, 0xB4, 0x81, 0x00, 0xB4, 0x01, 0x01, 0x01, 0x82,
  0x00, 0xB4, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82,
  0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9,
  0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_simple_identified_region_cert_size = sizeof(g_simple_identified_region_cert);


/*
 * 최대개수(kDot2IdentifiedRegionNum_Max=8) identified region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : { -- identifiedRegion이 8개
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryAndRegions : {
        countryOnly 180,
        regions { 1,2,3,4,5,6,7,8 } -- regions가 8개
      }
      countryAndSubregions : {
        country 180,
        regionAndSubregions { -- regionAndSubregions가 8개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } }, -- regions가 8개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } }, -- regions가 8개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } }, -- regions가 8개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } }, -- regions가 8개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } }, -- regions가 8개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } }, -- regions가 8개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } }, -- regions가 8개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } } -- regions가 8개
        }
      }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_max_identified_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x08, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80,
  0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB4, 0x81, 0x00, 0xB4, 0x01, 0x08, 0x01, 0x02, 0x03,
  0x04, 0x05, 0x06, 0x07, 0x08, 0x82, 0x00, 0xB4, 0x01, 0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00,
  0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x08,
  0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08,
  0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x07, 0x00, 0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05,
  0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00,
  0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02,
  0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x08, 0x00,
  0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01,
  0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07,
  0x00, 0x08, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A,
  0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95,
  0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_max_identified_region_cert_size = sizeof(g_max_identified_region_cert);


/*
 * 최대개수(kDot2IdentifiedRegionNum_Max=8)를 초과하는(9) identified region을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : { -- identifiedRegion이 9개
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180,
      countryOnly : 180
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_too_many_identified_region_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x09, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80,
  0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80, 0x00, 0xB4, 0x80, 0x00,
  0xB4, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94,
  0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1,
  0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_too_many_identified_region_cert_size = sizeof(g_too_many_identified_region_cert);


/*
 * 최대개수(kDot2IdentifiedRegionNum_Max=8)를 초과하는(9) countryAndRegions->regions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryAndRegions : {
        countryOnly 180,
        regions { 1,2,3,4,5,6,7,8,9 } -- regions가 9개
      }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_too_many_regions_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x81, 0x00, 0xB4, 0x01, 0x09, 0x01, 0x02, 0x03, 0x04, 0x05,
  0x06, 0x07, 0x08, 0x09, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04,
  0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C,
  0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_too_many_regions_cert_size = sizeof(g_too_many_regions_cert);


/*
 * 최대개수(kDot2IdentifiedRegionNum_Max=8)를 초과하는(9) regionAndSubregions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryAndSubregions : {
        country 180,
        regionAndSubregions { -- regionAndSubregions가 9개
          { region 1, subregions { 1,2,3,4,5,6,7,8 } },
          { region 1, subregions { 1,2,3,4,5,6,7,8 } },
          { region 1, subregions { 1,2,3,4,5,6,7,8 } },
          { region 1, subregions { 1,2,3,4,5,6,7,8 } },
          { region 1, subregions { 1,2,3,4,5,6,7,8 } },
          { region 1, subregions { 1,2,3,4,5,6,7,8 } },
          { region 1, subregions { 1,2,3,4,5,6,7,8 } },
          { region 1, subregions { 1,2,3,4,5,6,7,8 } },
          { region 1, subregions { 1,2,3,4,5,6,7,8 } }
        }
      }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_too_many_region_and_subregion_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x82, 0x00, 0xB4, 0x01, 0x09, 0x01, 0x01, 0x08, 0x00, 0x01,
  0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01,
  0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00,
  0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06,
  0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03,
  0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00,
  0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x08,
  0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08,
  0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x07, 0x00, 0x08, 0x01, 0x01, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05,
  0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35,
  0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C,
  0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_too_many_region_and_subregion_cert_size = sizeof(g_too_many_region_and_subregion_cert);


/*
 * 최대개수(kDot2IdentifiedRegionNum_Max=8)를 초과하는(9) subregions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryAndSubregions : {
        country 180,
        regionAndSubregions {
          { region 1, subregions { 1,2,3,4,5,6,7,8,9 } } -- subregions가 9개
        }
      }
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_too_many_subregions_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x82, 0x00, 0xB4, 0x01, 0x01, 0x01, 0x01, 0x09, 0x00, 0x01,
  0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x00, 0x09,
  0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82,
  0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3,
  0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_too_many_subregions_cert_size = sizeof(g_too_many_subregions_cert);


/*
 * microseconds 유형의 Duration을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration microseconds : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_usec_duration_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x80, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82,
  0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9,
  0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_usec_duration_cert_size = sizeof(g_usec_duration_cert);


/*
 * milliseconds 유형의 Duration을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration milliseconds : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_msec_duration_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x81, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82,
  0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9,
  0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_msec_duration_cert_size = sizeof(g_msec_duration_cert);


/*
 * seconds 유형의 Duration을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration seconds : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_sec_duration_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x82, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82,
  0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9,
  0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_sec_duration_cert_size = sizeof(g_sec_duration_cert);


/*
 * minutes 유형의 Duration을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration minutes : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_min_duration_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x83, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82,
  0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9,
  0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_min_duration_cert_size = sizeof(g_min_duration_cert);


/*
 * sixtyHours 유형의 Duration을 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration sixtyHours : 10
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_sixty_hours_duration_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x85, 0x00, 0x0A, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82,
  0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9,
  0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_sixty_hours_duration_cert_size = sizeof(g_sixty_hours_duration_cert);


/*
 * 최대개수(kDot2CertPermissionNum_Max=20) appPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135 },
      { psid 136 },
      { psid 137 },
      { psid 138 },
      { psid 139 },
      { psid 140 },
      { psid 141 },
      { psid 142 },
      { psid 143 },
      { psid 144 },
      { psid 145 },
      { psid 146 },
      { psid 147 },
      { psid 148 },
      { psid 149 },
      { psid 150 },
      { psid 151 },
      { psid 152 },
      { psid 153 },
      { psid 154 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_max_app_perms_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x14, 0x00, 0x01, 0x87, 0x00, 0x01,
  0x88, 0x00, 0x01, 0x89, 0x00, 0x01, 0x8A, 0x00, 0x01, 0x8B, 0x00, 0x01, 0x8C, 0x00, 0x01, 0x8D,
  0x00, 0x01, 0x8E, 0x00, 0x01, 0x8F, 0x00, 0x01, 0x90, 0x00, 0x01, 0x91, 0x00, 0x01, 0x92, 0x00,
  0x01, 0x93, 0x00, 0x01, 0x94, 0x00, 0x01, 0x95, 0x00, 0x01, 0x96, 0x00, 0x01, 0x97, 0x00, 0x01,
  0x98, 0x00, 0x01, 0x99, 0x00, 0x01, 0x9A, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A,
  0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95,
  0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_max_app_perms_cert_size = sizeof(g_max_app_perms_cert);


/*
 * 최대개수(kDot2CertPermissionNum_Max=20)를 초과하는(21) appPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135 },
      { psid 136 },
      { psid 137 },
      { psid 138 },
      { psid 139 },
      { psid 140 },
      { psid 141 },
      { psid 142 },
      { psid 143 },
      { psid 144 },
      { psid 145 },
      { psid 146 },
      { psid 147 },
      { psid 148 },
      { psid 149 },
      { psid 150 },
      { psid 151 },
      { psid 152 },
      { psid 153 },
      { psid 154 },
      { psid 155 }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_many_app_perms_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x15, 0x00, 0x01, 0x87, 0x00, 0x01,
  0x88, 0x00, 0x01, 0x89, 0x00, 0x01, 0x8A, 0x00, 0x01, 0x8B, 0x00, 0x01, 0x8C, 0x00, 0x01, 0x8D,
  0x00, 0x01, 0x8E, 0x00, 0x01, 0x8F, 0x00, 0x01, 0x90, 0x00, 0x01, 0x91, 0x00, 0x01, 0x92, 0x00,
  0x01, 0x93, 0x00, 0x01, 0x94, 0x00, 0x01, 0x95, 0x00, 0x01, 0x96, 0x00, 0x01, 0x97, 0x00, 0x01,
  0x98, 0x00, 0x01, 0x99, 0x00, 0x01, 0x9A, 0x00, 0x01, 0x9B, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A,
  0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1,
  0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_many_app_perms_cert_size = sizeof(g_many_app_perms_cert);


/*
 * 최소길이(0) opaque SSP를 갖는 appPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135, ssp opaque : ''H }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_shortest_opaque_ssp_app_perms_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x80, 0x01, 0x87, 0x80, 0x00,
  0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92,
  0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21,
  0x81, 0x3B
};
size_t g_shortest_opaque_ssp_app_perms_cert_size = sizeof(g_shortest_opaque_ssp_app_perms_cert);


/*
 * 최대길이(kDot2CertSspLen_Max=31) opaque SSP를 갖는 appPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135, ssp opaque : '00010203040506070809000102030405060708090001020304050607080900'H }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_longest_opaque_ssp_app_perms_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x80, 0x01, 0x87, 0x80, 0x1F,
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05,
  0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x81,
  0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2,
  0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81,
  0x3B
};
size_t g_longest_opaque_ssp_app_perms_cert_size = sizeof(g_longest_opaque_ssp_app_perms_cert);


/*
 * 최대길이(kDot2CertSspLen_Max=31)를 초과하는(32) opaque SSP를 갖는 appPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135, ssp opaque : '0001020304050607080900010203040506070809000102030405060708090001'H }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_too_long_opaque_ssp_app_perms_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x80, 0x01, 0x87, 0x80, 0x20,
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05,
  0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01,
  0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92,
  0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21,
  0x81, 0x3B
};
size_t g_too_long_opaque_ssp_app_perms_cert_size = sizeof(g_too_long_opaque_ssp_app_perms_cert);


/*
 * 최소길이(0) bitmapSsp를 갖는 appPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135, ssp bitmapSsp : ''H }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_shortest_bitmap_ssp_app_perms_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x80, 0x01, 0x87, 0x81, 0x01,
  0x00, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F,
  0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05,
  0x21, 0x81, 0x3B
};
size_t g_shortest_bitmap_ssp_app_perms_cert_size = sizeof(g_shortest_bitmap_ssp_app_perms_cert);


/*
 * 최대길이(kDot2CertSspLen_Max=31) bitmapSsp를 갖는 appPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type implicit,
  issuer sha256AndDigest : '163F2B7BC99253F4'H,
  toBeSigned {
    id binaryId : '66DF39628256B84E'H,
    cracaId '000000'H,
    crlSeries 0,
    validityPeriod {
      start 499525388,
      duration hours : 850
    },
    region identifiedRegion : {
      countryOnly : 180
    },
    appPermissions {
      { psid 135, ssp bitmapSsp : '00010203040506070809000102030405060708090001020304050607080900'H }
    },
    verifyKeyIndicator reconstructionValue : compressed-y-0 : '1445354A04AD1A94821725CA0F92F2B91B476CB12CD395C1C3DD51850521813B'H
  }
}
*/
uint8_t g_longest_bitmap_ssp_app_perms_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x83, 0x01, 0x01, 0x80, 0x00, 0xB4, 0x01, 0x01, 0x80, 0x01, 0x87, 0x81, 0x20,
  0x1F, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04,
  0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00,
  0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92,
  0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21,
  0x81, 0x3B
};
size_t g_longest_bitmap_ssp_app_perms_cert_size = sizeof(g_longest_bitmap_ssp_app_perms_cert);


/*
 * 최대개수(kDot2CertPermissionNum_Max=20) certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions { -- explicit 형식 permssions가 20개
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_max_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x14, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02,
  0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0,
  0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0,
  0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81,
  0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01,
  0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02,
  0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0x80, 0x80, 0x83, 0xD1, 0x68, 0xB0, 0x9D, 0x66, 0x8D, 0xDA,
  0x83, 0xFC, 0xAC, 0x97, 0x8A, 0x1D, 0x27, 0x25, 0x3A, 0x3B, 0xC2, 0xFC, 0xE6, 0xC4, 0xE3, 0xF2,
  0x64, 0x9B, 0x9F, 0xBD, 0x00, 0xD3, 0x38, 0xC8, 0x08, 0x80, 0x80, 0xEA, 0x2E, 0x01, 0xBF, 0x23,
  0x1C, 0x48, 0x4C, 0x5D, 0xE7, 0x3D, 0x74, 0x48, 0x34, 0xA1, 0x46, 0x58, 0x04, 0x45, 0x6F, 0x24,
  0xEA, 0xB0, 0x7A, 0x4C, 0x83, 0xDE, 0x89, 0x72, 0xF1, 0x28, 0xC3, 0xD8, 0xB0, 0x3C, 0xA5, 0x11,
  0x40, 0x46, 0xE0, 0x08, 0x0B, 0x27, 0xEE, 0xC0, 0x87, 0x89, 0x7D, 0xCE, 0x37, 0xAE, 0x7D, 0xEE,
  0xFD, 0xCD, 0x35, 0x3D, 0x44, 0x99, 0x61, 0xAB, 0xB5, 0xAF, 0x94
};
size_t g_max_cert_issue_perms_cert_size = sizeof(g_max_cert_issue_perms_cert);


/*
 * 최대개수(kDot2CertPermissionNum_Max=20)를 초과하는(21) certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions { -- explicit 형식 permssions가 21개
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B },
      { subjectPermissions all : NULL, minChainLength 2, chainLengthRange 0, eeType '11000000'B }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_too_many_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x15, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02,
  0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0,
  0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0,
  0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81,
  0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01,
  0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02,
  0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0xA0, 0x81, 0x01, 0x02, 0xC0, 0x80, 0x80, 0x83, 0xD1, 0x68,
  0xB0, 0x9D, 0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC, 0x97, 0x8A, 0x1D, 0x27, 0x25, 0x3A, 0x3B, 0xC2,
  0xFC, 0xE6, 0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F, 0xBD, 0x00, 0xD3, 0x38, 0xC8, 0x08, 0x80, 0x80,
  0xEA, 0x2E, 0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C, 0x5D, 0xE7, 0x3D, 0x74, 0x48, 0x34, 0xA1, 0x46,
  0x58, 0x04, 0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A, 0x4C, 0x83, 0xDE, 0x89, 0x72, 0xF1, 0x28, 0xC3,
  0xD8, 0xB0, 0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0, 0x08, 0x0B, 0x27, 0xEE, 0xC0, 0x87, 0x89, 0x7D,
  0xCE, 0x37, 0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35, 0x3D, 0x44, 0x99, 0x61, 0xAB, 0xB5, 0xAF, 0x94
};
size_t g_too_many_cert_issue_perms_cert_size = sizeof(g_too_many_cert_issue_perms_cert);


/*
 * 최대개수(kDot2CertPsidSspRangeNum_Max=8) PsidSspRange를 포함한 explicit 형식 certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions {
        {
          subjectPermissions explicit : { -- explicit 형식 permssions 내에 psidSspRange가 8개
            { psid 10, sspRange all : NULL },
            { psid 11, sspRange all : NULL },
            { psid 12, sspRange all : NULL },
            { psid 13, sspRange all : NULL },
            { psid 14, sspRange all : NULL },
            { psid 15, sspRange all : NULL },
            { psid 16, sspRange all : NULL },
            { psid 17, sspRange all : NULL }
          },
          minChainLength 1,
          chainLengthRange -1,
          eeType '11000000'B
        }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_max_psid_ssp_range_explicit_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x01, 0x60, 0x80, 0x01, 0x08, 0x80, 0x01, 0x0A, 0x81, 0x80, 0x01, 0x0B, 0x81, 0x80, 0x01,
  0x0C, 0x81, 0x80, 0x01, 0x0D, 0x81, 0x80, 0x01, 0x0E, 0x81, 0x80, 0x01, 0x0F, 0x81, 0x80, 0x01,
  0x10, 0x81, 0x80, 0x01, 0x11, 0x81, 0x01, 0xFF, 0xC0, 0x80, 0x80, 0x83, 0xD1, 0x68, 0xB0, 0x9D,
  0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC, 0x97, 0x8A, 0x1D, 0x27, 0x25, 0x3A, 0x3B, 0xC2, 0xFC, 0xE6,
  0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F, 0xBD, 0x00, 0xD3, 0x38, 0xC8, 0x08, 0x80, 0x80, 0xEA, 0x2E,
  0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C, 0x5D, 0xE7, 0x3D, 0x74, 0x48, 0x34, 0xA1, 0x46, 0x58, 0x04,
  0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A, 0x4C, 0x83, 0xDE, 0x89, 0x72, 0xF1, 0x28, 0xC3, 0xD8, 0xB0,
  0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0, 0x08, 0x0B, 0x27, 0xEE, 0xC0, 0x87, 0x89, 0x7D, 0xCE, 0x37,
  0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35, 0x3D, 0x44, 0x99, 0x61, 0xAB, 0xB5, 0xAF, 0x94
};
size_t g_max_psid_ssp_range_explicit_cert_issue_perms_cert_size = sizeof(g_max_psid_ssp_range_explicit_cert_issue_perms_cert);


/*
 * 최대개수(kDot2CertPsidSspRangeNum_Max=8)를 초과하는(9) PsidSspRange를 포함한 explicit 형식 certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions {
        {
          subjectPermissions explicit : { -- explicit 형식 permssions 내에 psidSspRange가 9개
            { psid 10, sspRange all : NULL },
            { psid 11, sspRange all : NULL },
            { psid 12, sspRange all : NULL },
            { psid 13, sspRange all : NULL },
            { psid 14, sspRange all : NULL },
            { psid 15, sspRange all : NULL },
            { psid 16, sspRange all : NULL },
            { psid 17, sspRange all : NULL },
            { psid 18, sspRange all : NULL }
          },
          minChainLength 1,
          chainLengthRange -1,
          eeType '11000000'B
        }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_too_many_psid_ssp_range_explicit_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x01, 0x60, 0x80, 0x01, 0x09, 0x80, 0x01, 0x0A, 0x81, 0x80, 0x01, 0x0B, 0x81, 0x80, 0x01,
  0x0C, 0x81, 0x80, 0x01, 0x0D, 0x81, 0x80, 0x01, 0x0E, 0x81, 0x80, 0x01, 0x0F, 0x81, 0x80, 0x01,
  0x10, 0x81, 0x80, 0x01, 0x11, 0x81, 0x80, 0x01, 0x12, 0x81, 0x01, 0xFF, 0xC0, 0x80, 0x80, 0x83,
  0xD1, 0x68, 0xB0, 0x9D, 0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC, 0x97, 0x8A, 0x1D, 0x27, 0x25, 0x3A,
  0x3B, 0xC2, 0xFC, 0xE6, 0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F, 0xBD, 0x00, 0xD3, 0x38, 0xC8, 0x08,
  0x80, 0x80, 0xEA, 0x2E, 0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C, 0x5D, 0xE7, 0x3D, 0x74, 0x48, 0x34,
  0xA1, 0x46, 0x58, 0x04, 0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A, 0x4C, 0x83, 0xDE, 0x89, 0x72, 0xF1,
  0x28, 0xC3, 0xD8, 0xB0, 0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0, 0x08, 0x0B, 0x27, 0xEE, 0xC0, 0x87,
  0x89, 0x7D, 0xCE, 0x37, 0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35, 0x3D, 0x44, 0x99, 0x61, 0xAB, 0xB5,
  0xAF, 0x94
};
size_t g_too_many_psid_ssp_range_explicit_cert_issue_perms_cert_size = sizeof(g_too_many_psid_ssp_range_explicit_cert_issue_perms_cert);


/*
 * 최대개수(kDot2CertSspNum_Max=8) opaque SspRange를 포함한 explicit 형식 certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions {
        {
          subjectPermissions explicit : {
            {
              psid 10,
              sspRange opaque : { -- opaque 형식 sspRange가 8개
                '830001'H,
                '830002'H,
                '830003'H,
                '830004'H,
                '830005'H,
                '830006'H,
                '830007'H,
                '830008'H
              }
            }
          },
          minChainLength 1,
          chainLengthRange -1,
          eeType '11000000'B
        }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_max_opaque_ssp_range_explicit_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x01, 0x60, 0x80, 0x01, 0x01, 0x80, 0x01, 0x0A, 0x80, 0x01, 0x08, 0x03, 0x83, 0x00, 0x01,
  0x03, 0x83, 0x00, 0x02, 0x03, 0x83, 0x00, 0x03, 0x03, 0x83, 0x00, 0x04, 0x03, 0x83, 0x00, 0x05,
  0x03, 0x83, 0x00, 0x06, 0x03, 0x83, 0x00, 0x07, 0x03, 0x83, 0x00, 0x08, 0x01, 0xFF, 0xC0, 0x80,
  0x80, 0x83, 0xD1, 0x68, 0xB0, 0x9D, 0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC, 0x97, 0x8A, 0x1D, 0x27,
  0x25, 0x3A, 0x3B, 0xC2, 0xFC, 0xE6, 0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F, 0xBD, 0x00, 0xD3, 0x38,
  0xC8, 0x08, 0x80, 0x80, 0xEA, 0x2E, 0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C, 0x5D, 0xE7, 0x3D, 0x74,
  0x48, 0x34, 0xA1, 0x46, 0x58, 0x04, 0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A, 0x4C, 0x83, 0xDE, 0x89,
  0x72, 0xF1, 0x28, 0xC3, 0xD8, 0xB0, 0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0, 0x08, 0x0B, 0x27, 0xEE,
  0xC0, 0x87, 0x89, 0x7D, 0xCE, 0x37, 0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35, 0x3D, 0x44, 0x99, 0x61,
  0xAB, 0xB5, 0xAF, 0x94
};
size_t g_max_opaque_ssp_range_explicit_cert_issue_perms_cert_size = sizeof(g_max_opaque_ssp_range_explicit_cert_issue_perms_cert);


/*
 * 최대개수(kDot2CertSspNum_Max=8)를 초과하는(9) opaque SspRange를 포함한 explicit 형식 certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions {
        {
          subjectPermissions explicit : {
            {
              psid 10,
              sspRange opaque : { -- opaque 형식 sspRange가 9개
                '830001'H,
                '830002'H,
                '830003'H,
                '830004'H,
                '830005'H,
                '830006'H,
                '830007'H,
                '830008'H,
                '830009'H
              }
            }
          },
          minChainLength 1,
          chainLengthRange -1,
          eeType '11000000'B
        }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_too_many_opaque_ssp_range_explicit_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x01, 0x60, 0x80, 0x01, 0x01, 0x80, 0x01, 0x0A, 0x80, 0x01, 0x09, 0x03, 0x83, 0x00, 0x01,
  0x03, 0x83, 0x00, 0x02, 0x03, 0x83, 0x00, 0x03, 0x03, 0x83, 0x00, 0x04, 0x03, 0x83, 0x00, 0x05,
  0x03, 0x83, 0x00, 0x06, 0x03, 0x83, 0x00, 0x07, 0x03, 0x83, 0x00, 0x08, 0x03, 0x83, 0x00, 0x09,
  0x01, 0xFF, 0xC0, 0x80, 0x80, 0x83, 0xD1, 0x68, 0xB0, 0x9D, 0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC,
  0x97, 0x8A, 0x1D, 0x27, 0x25, 0x3A, 0x3B, 0xC2, 0xFC, 0xE6, 0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F,
  0xBD, 0x00, 0xD3, 0x38, 0xC8, 0x08, 0x80, 0x80, 0xEA, 0x2E, 0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C,
  0x5D, 0xE7, 0x3D, 0x74, 0x48, 0x34, 0xA1, 0x46, 0x58, 0x04, 0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A,
  0x4C, 0x83, 0xDE, 0x89, 0x72, 0xF1, 0x28, 0xC3, 0xD8, 0xB0, 0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0,
  0x08, 0x0B, 0x27, 0xEE, 0xC0, 0x87, 0x89, 0x7D, 0xCE, 0x37, 0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35,
  0x3D, 0x44, 0x99, 0x61, 0xAB, 0xB5, 0xAF, 0x94
};
size_t g_too_many_opaque_ssp_range_explicit_cert_issue_perms_cert_size = sizeof(g_too_many_opaque_ssp_range_explicit_cert_issue_perms_cert);


/*
 * 최대길이(kDot2CertSspLen_Max=31) opaque SspRange를 포함한 explicit 형식 certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions {
        {
          subjectPermissions explicit : {
            {
              psid 10,
              sspRange opaque : {
                '00010203040506070809000102030405060708090001020304050607080900'H -- opaque 형식 sspRange의 길이가 31
              }
            }
          },
          minChainLength 1,
          chainLengthRange -1,
          eeType '11000000'B
        }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_longest_opaque_ssp_range_explicit_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x01, 0x60, 0x80, 0x01, 0x01, 0x80, 0x01, 0x0A, 0x80, 0x01, 0x01, 0x1F, 0x00, 0x01, 0x02,
  0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
  0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0xFF, 0xC0, 0x80,
  0x80, 0x83, 0xD1, 0x68, 0xB0, 0x9D, 0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC, 0x97, 0x8A, 0x1D, 0x27,
  0x25, 0x3A, 0x3B, 0xC2, 0xFC, 0xE6, 0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F, 0xBD, 0x00, 0xD3, 0x38,
  0xC8, 0x08, 0x80, 0x80, 0xEA, 0x2E, 0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C, 0x5D, 0xE7, 0x3D, 0x74,
  0x48, 0x34, 0xA1, 0x46, 0x58, 0x04, 0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A, 0x4C, 0x83, 0xDE, 0x89,
  0x72, 0xF1, 0x28, 0xC3, 0xD8, 0xB0, 0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0, 0x08, 0x0B, 0x27, 0xEE,
  0xC0, 0x87, 0x89, 0x7D, 0xCE, 0x37, 0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35, 0x3D, 0x44, 0x99, 0x61,
  0xAB, 0xB5, 0xAF, 0x94
};
size_t g_longest_opaque_ssp_range_explicit_cert_issue_perms_cert_size = sizeof(g_longest_opaque_ssp_range_explicit_cert_issue_perms_cert);


/*
 * 최대길이(kDot2CertSspLen_Max=31)를 초과하는(32) opaque SspRange를 포함한 explicit 형식 certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions {
        {
          subjectPermissions explicit : {
            {
              psid 10,
              sspRange opaque : {
                '0001020304050607080900010203040506070809000102030405060708090001'H -- opaque 형식 sspRange의 길이가 32
              }
            }
          },
          minChainLength 1,
          chainLengthRange -1,
          eeType '11000000'B
        }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_too_long_opaque_ssp_range_explicit_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x01, 0x60, 0x80, 0x01, 0x01, 0x80, 0x01, 0x0A, 0x80, 0x01, 0x01, 0x20, 0x00, 0x01, 0x02,
  0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
  0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x01, 0xFF, 0xC0,
  0x80, 0x80, 0x83, 0xD1, 0x68, 0xB0, 0x9D, 0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC, 0x97, 0x8A, 0x1D,
  0x27, 0x25, 0x3A, 0x3B, 0xC2, 0xFC, 0xE6, 0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F, 0xBD, 0x00, 0xD3,
  0x38, 0xC8, 0x08, 0x80, 0x80, 0xEA, 0x2E, 0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C, 0x5D, 0xE7, 0x3D,
  0x74, 0x48, 0x34, 0xA1, 0x46, 0x58, 0x04, 0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A, 0x4C, 0x83, 0xDE,
  0x89, 0x72, 0xF1, 0x28, 0xC3, 0xD8, 0xB0, 0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0, 0x08, 0x0B, 0x27,
  0xEE, 0xC0, 0x87, 0x89, 0x7D, 0xCE, 0x37, 0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35, 0x3D, 0x44, 0x99,
  0x61, 0xAB, 0xB5, 0xAF, 0x94
};
size_t g_too_long_opaque_ssp_range_explicit_cert_issue_perms_cert_size = sizeof(g_too_long_opaque_ssp_range_explicit_cert_issue_perms_cert);


/*
 * 최소길이(kDot2CertBitmapSspValueLen_Min=1/kDot2CertBitmapSspBitmaskLen_Min=1) bitmapSspRange sspValue/sspBitmask를 포함한 explicit 형식 certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions {
        {
          subjectPermissions explicit : {
            {
              psid 10,
              sspRange bitmapSspRange : {
                sspValue '00'H, -- bitmapSspRange 형식 sspRange의 sspValue의 길이가 1
                sspBitmask '10'H -- bitmapSspRange 형식 sspRange의 sspBitmask의 길이가 1
              }
            }
          },
          minChainLength 1,
          chainLengthRange -1,
          eeType '11000000'B
        }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_shortest_bitmap_ssp_range_explicit_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x01, 0x60, 0x80, 0x01, 0x01, 0x80, 0x01, 0x0A, 0x82, 0x04, 0x01, 0x00, 0x01, 0x10, 0x01,
  0xFF, 0xC0, 0x80, 0x80, 0x83, 0xD1, 0x68, 0xB0, 0x9D, 0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC, 0x97,
  0x8A, 0x1D, 0x27, 0x25, 0x3A, 0x3B, 0xC2, 0xFC, 0xE6, 0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F, 0xBD,
  0x00, 0xD3, 0x38, 0xC8, 0x08, 0x80, 0x80, 0xEA, 0x2E, 0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C, 0x5D,
  0xE7, 0x3D, 0x74, 0x48, 0x34, 0xA1, 0x46, 0x58, 0x04, 0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A, 0x4C,
  0x83, 0xDE, 0x89, 0x72, 0xF1, 0x28, 0xC3, 0xD8, 0xB0, 0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0, 0x08,
  0x0B, 0x27, 0xEE, 0xC0, 0x87, 0x89, 0x7D, 0xCE, 0x37, 0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35, 0x3D,
  0x44, 0x99, 0x61, 0xAB, 0xB5, 0xAF, 0x94
};
size_t g_shortest_bitmap_ssp_range_explicit_cert_issue_perms_cert_size = sizeof(g_shortest_bitmap_ssp_range_explicit_cert_issue_perms_cert);


/*
 * 최대길이(kDot2CertBitmapSspValueLen_Max=32/kDot2CertBitmapSspBitmaskLen_Max=32) bitmapSspRange sspValue/sspBitmask를 포함한 explicit 형식 certIssuePermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '0DF9ED502B2D235B'H,
  toBeSigned {
    id name : "ica.pentasecurity.com",
    cracaId '2D235B'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 20
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      { psid 35, ssp opaque : '830001'H }
    },
    certIssuePermissions {
        {
          subjectPermissions explicit : {
            {
              psid 10,
              sspRange bitmapSspRange : {
                sspValue '0001020304050607080900010203040506070809000102030405060708090001'H, -- bitmapSspRange 형식 sspRange의 sspValue의 길이가 32
                sspBitmask '1011121314151617181910111213141516171819101112131415161718191011'H -- bitmapSspRange 형식 sspRange의 sspBitmask의 길이가 32
              }
            }
          },
          minChainLength 1,
          chainLengthRange -1,
          eeType '11000000'B
        }
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D168B09D668DDA83FCAC978A1D27253A3BC2FCE6C4E3F2649B9FBD00D338C808'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : 'EA2E01BF231C484C5DE73D744834A1465804456F24EAB07A4C83DE8972F128C3'H,
    sSig 'D8B03CA5114046E0080B27EEC087897DCE37AE7DEEFDCD353D449961ABB5AF94'H
  }
}
*/
uint8_t g_longest_bitmap_ssp_range_explicit_cert_issue_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x0D, 0xF9, 0xED, 0x50, 0x2B, 0x2D, 0x23, 0x5B, 0x58, 0x81, 0x15, 0x69,
  0x63, 0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
  0x2E, 0x63, 0x6F, 0x6D, 0x2D, 0x23, 0x5B, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x14,
  0x83, 0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x83, 0x00, 0x01,
  0x01, 0x01, 0x60, 0x80, 0x01, 0x01, 0x80, 0x01, 0x0A, 0x82, 0x42, 0x20, 0x00, 0x01, 0x02, 0x03,
  0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x01, 0x20, 0x10, 0x11, 0x12,
  0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
  0x19, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x10, 0x11, 0x01, 0xFF, 0xC0,
  0x80, 0x80, 0x83, 0xD1, 0x68, 0xB0, 0x9D, 0x66, 0x8D, 0xDA, 0x83, 0xFC, 0xAC, 0x97, 0x8A, 0x1D,
  0x27, 0x25, 0x3A, 0x3B, 0xC2, 0xFC, 0xE6, 0xC4, 0xE3, 0xF2, 0x64, 0x9B, 0x9F, 0xBD, 0x00, 0xD3,
  0x38, 0xC8, 0x08, 0x80, 0x80, 0xEA, 0x2E, 0x01, 0xBF, 0x23, 0x1C, 0x48, 0x4C, 0x5D, 0xE7, 0x3D,
  0x74, 0x48, 0x34, 0xA1, 0x46, 0x58, 0x04, 0x45, 0x6F, 0x24, 0xEA, 0xB0, 0x7A, 0x4C, 0x83, 0xDE,
  0x89, 0x72, 0xF1, 0x28, 0xC3, 0xD8, 0xB0, 0x3C, 0xA5, 0x11, 0x40, 0x46, 0xE0, 0x08, 0x0B, 0x27,
  0xEE, 0xC0, 0x87, 0x89, 0x7D, 0xCE, 0x37, 0xAE, 0x7D, 0xEE, 0xFD, 0xCD, 0x35, 0x3D, 0x44, 0x99,
  0x61, 0xAB, 0xB5, 0xAF, 0x94
};
size_t g_longest_bitmap_ssp_range_explicit_cert_issue_perms_cert_size = sizeof(g_longest_bitmap_ssp_range_explicit_cert_issue_perms_cert);


/* 최대개수(kDot2CertPermissionNum_Max=20) certRequestPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '281C9C1E50F4F7A1'H,
  toBeSigned {
    id name : "ra.pentasecurity.com",
    cracaId 'F4F7A1'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 3
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      {
        psid 35,
        ssp opaque : '8B0001'H
      }
    },
    certRequestPermissions { -- certRequestPermissions가 20개
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B }
    },
    encryptionKey {
      supportedSymmAlg aes128Ccm,
      publicKey eciesNistP256 : compressed-y-0 : '9F2D0F08B58FD72A782D40F88E06A1AF8CF2DFDB2A090C01A0CE722FEF904967'H
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D59CE16C2505356185BE12A8826D8D1398B89D40A3641ED4EC0D7125B75273E3'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : '79156CC72C63B386F8F500202BD7D979F222157DB6AAC00523AD2751FA4C0DF4'H,
    sSig '4BAD0BC4AC4E67D4A5CA042877F26CCB0E44C6F8BE08EB779AEE405AE14EFDB9'H
  }
}
*/
uint8_t g_max_cert_req_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x28, 0x1C, 0x9C, 0x1E, 0x50, 0xF4, 0xF7, 0xA1, 0x55, 0x81, 0x14, 0x72,
  0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2E,
  0x63, 0x6F, 0x6D, 0xF4, 0xF7, 0xA1, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x03, 0x83,
  0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x8B, 0x00, 0x01, 0x01,
  0x14, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x00, 0x80, 0x82, 0x9F, 0x2D, 0x0F, 0x08, 0xB5, 0x8F, 0xD7, 0x2A, 0x78, 0x2D, 0x40, 0xF8,
  0x8E, 0x06, 0xA1, 0xAF, 0x8C, 0xF2, 0xDF, 0xDB, 0x2A, 0x09, 0x0C, 0x01, 0xA0, 0xCE, 0x72, 0x2F,
  0xEF, 0x90, 0x49, 0x67, 0x80, 0x80, 0x83, 0xD5, 0x9C, 0xE1, 0x6C, 0x25, 0x05, 0x35, 0x61, 0x85,
  0xBE, 0x12, 0xA8, 0x82, 0x6D, 0x8D, 0x13, 0x98, 0xB8, 0x9D, 0x40, 0xA3, 0x64, 0x1E, 0xD4, 0xEC,
  0x0D, 0x71, 0x25, 0xB7, 0x52, 0x73, 0xE3, 0x80, 0x80, 0x79, 0x15, 0x6C, 0xC7, 0x2C, 0x63, 0xB3,
  0x86, 0xF8, 0xF5, 0x00, 0x20, 0x2B, 0xD7, 0xD9, 0x79, 0xF2, 0x22, 0x15, 0x7D, 0xB6, 0xAA, 0xC0,
  0x05, 0x23, 0xAD, 0x27, 0x51, 0xFA, 0x4C, 0x0D, 0xF4, 0x4B, 0xAD, 0x0B, 0xC4, 0xAC, 0x4E, 0x67,
  0xD4, 0xA5, 0xCA, 0x04, 0x28, 0x77, 0xF2, 0x6C, 0xCB, 0x0E, 0x44, 0xC6, 0xF8, 0xBE, 0x08, 0xEB,
  0x77, 0x9A, 0xEE, 0x40, 0x5A, 0xE1, 0x4E, 0xFD, 0xB9
};
size_t g_max_cert_req_perms_cert_size = sizeof(g_max_cert_req_perms_cert);


/* 최대개수(kDot2CertPermissionNum_Max=20)를 초과하는(21) certRequestPermissions를 포함한 인증서 - asn1.io에서 임의로 생성
rec1value Certificate ::= {
  version 3,
  type explicit,
  issuer sha256AndDigest : '281C9C1E50F4F7A1'H,
  toBeSigned {
    id name : "ra.pentasecurity.com",
    cracaId 'F4F7A1'H,
    crlSeries 2,
    validityPeriod {
      start 468816349,
      duration years : 3
    },
    region identifiedRegion : {
      countryOnly : 410
    },
    appPermissions {
      {
        psid 35,
        ssp opaque : '8B0001'H
      }
    },
    certRequestPermissions { -- certRequestPermissions가 21개
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B },
      { subjectPermissions all : NULL, minChainLength 0, chainLengthRange 0, eeType '10000000'B }
    },
    encryptionKey {
      supportedSymmAlg aes128Ccm,
      publicKey eciesNistP256 : compressed-y-0 : '9F2D0F08B58FD72A782D40F88E06A1AF8CF2DFDB2A090C01A0CE722FEF904967'H
    },
    verifyKeyIndicator verificationKey : ecdsaNistP256 : compressed-y-1 : 'D59CE16C2505356185BE12A8826D8D1398B89D40A3641ED4EC0D7125B75273E3'H
  },
  signature ecdsaNistP256Signature : {
    rSig x-only : '79156CC72C63B386F8F500202BD7D979F222157DB6AAC00523AD2751FA4C0DF4'H,
    sSig '4BAD0BC4AC4E67D4A5CA042877F26CCB0E44C6F8BE08EB779AEE405AE14EFDB9'H
  }
}
*/
uint8_t g_too_many_cert_req_perms_cert[] = {
  0x80, 0x03, 0x00, 0x80, 0x28, 0x1C, 0x9C, 0x1E, 0x50, 0xF4, 0xF7, 0xA1, 0x55, 0x81, 0x14, 0x72,
  0x61, 0x2E, 0x70, 0x65, 0x6E, 0x74, 0x61, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2E,
  0x63, 0x6F, 0x6D, 0xF4, 0xF7, 0xA1, 0x00, 0x02, 0x1B, 0xF1, 0x91, 0xDD, 0x86, 0x00, 0x03, 0x83,
  0x01, 0x01, 0x80, 0x01, 0x9A, 0x01, 0x01, 0x80, 0x01, 0x23, 0x80, 0x03, 0x8B, 0x00, 0x01, 0x01,
  0x15, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01, 0x00, 0x80, 0x81, 0x01,
  0x00, 0x80, 0x81, 0x01, 0x00, 0x00, 0x80, 0x82, 0x9F, 0x2D, 0x0F, 0x08, 0xB5, 0x8F, 0xD7, 0x2A,
  0x78, 0x2D, 0x40, 0xF8, 0x8E, 0x06, 0xA1, 0xAF, 0x8C, 0xF2, 0xDF, 0xDB, 0x2A, 0x09, 0x0C, 0x01,
  0xA0, 0xCE, 0x72, 0x2F, 0xEF, 0x90, 0x49, 0x67, 0x80, 0x80, 0x83, 0xD5, 0x9C, 0xE1, 0x6C, 0x25,
  0x05, 0x35, 0x61, 0x85, 0xBE, 0x12, 0xA8, 0x82, 0x6D, 0x8D, 0x13, 0x98, 0xB8, 0x9D, 0x40, 0xA3,
  0x64, 0x1E, 0xD4, 0xEC, 0x0D, 0x71, 0x25, 0xB7, 0x52, 0x73, 0xE3, 0x80, 0x80, 0x79, 0x15, 0x6C,
  0xC7, 0x2C, 0x63, 0xB3, 0x86, 0xF8, 0xF5, 0x00, 0x20, 0x2B, 0xD7, 0xD9, 0x79, 0xF2, 0x22, 0x15,
  0x7D, 0xB6, 0xAA, 0xC0, 0x05, 0x23, 0xAD, 0x27, 0x51, 0xFA, 0x4C, 0x0D, 0xF4, 0x4B, 0xAD, 0x0B,
  0xC4, 0xAC, 0x4E, 0x67, 0xD4, 0xA5, 0xCA, 0x04, 0x28, 0x77, 0xF2, 0x6C, 0xCB, 0x0E, 0x44, 0xC6,
  0xF8, 0xBE, 0x08, 0xEB, 0x77, 0x9A, 0xEE, 0x40, 0x5A, 0xE1, 0x4E, 0xFD, 0xB9
};
size_t g_too_many_cert_req_perms_cert_size = sizeof(g_too_many_cert_req_perms_cert);