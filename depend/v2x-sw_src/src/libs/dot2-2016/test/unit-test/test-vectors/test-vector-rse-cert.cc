/** 
 * @file
 * @brief 단위테스트에서 사용되는 샘플 rse 인증서 데이터를 정의한 파일
 * @date 2020-04-11
 * @author gyun
 */


// 시스템 헤더 파일
#include <stddef.h>
#include <stdint.h>

// 라이브러리 내부 헤더 파일
#include "dot2-internal.h"


/* 샘플 rse-0 인증서 (Penta-security 66DF39628256B84E/rse-0/downloadFiles/b68ce89c75396849.cert)
rec1value Certificate ::=
{
   version = 3
   type = implicit
   issuer {
      sha256AndDigest = 0x163f2b7bc99253f4
   }
   toBeSigned {
      id {
         binaryId = 0x66df39628256b84e
      }
      cracaId = 0x000000
      crlSeries = 0
      validityPeriod {
         start = 499525388
         duration {
            hours = 850
         }
      }
      region {
         circularRegion {
            center {
               latitude = 374856150
               longitude = 1270392830
            }
            radius = 3000
         }
      }
      appPermissions[0] {
         psid = 135
      }
      verifyKeyIndicator {
         reconstructionValue {
            compressed-y-0 = 0x1445354a04ad1a94821725ca0f92f2b91b476cb12cd395c1c3dd51850521813b
         }
      }
   }
} */
uint8_t g_sample_rse_0_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C,
  0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01,
  0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A, 0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25,
  0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1, 0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51,
  0x85, 0x05, 0x21, 0x81, 0x3B
};
size_t g_sample_rse_0_cert_size = sizeof(g_sample_rse_0_cert);
uint8_t g_sample_rse_0_cert_reconstruct_value[DOT2_EC_256_COMPRESSED_PUB_KEY_LEN] = {
  kDot2ECPointForm_Compressed_y_0,
  0x14, 0x45, 0x35, 0x4a, 0x04, 0xad, 0x1a, 0x94, 0x82, 0x17, 0x25, 0xca, 0x0f, 0x92, 0xf2, 0xb9,
  0x1b, 0x47, 0x6c, 0xb1, 0x2c, 0xd3, 0x95, 0xc1, 0xc3, 0xdd, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3b
};
uint8_t g_sample_rse_0_cert_issuer_h8[8] = {
  0x16, 0x3f, 0x2b, 0x7b, 0xc9, 0x92, 0x53, 0xf4
};
uint8_t g_sample_rse_0_cert_h[32] = {
  0x95, 0xb1, 0xbd, 0x1f, 0xb5, 0x95, 0x23, 0x57, 0x1c, 0x61, 0xe7, 0x28, 0x7f, 0x15, 0x3a, 0x83,
  0xf6, 0x39, 0x5e, 0x9f, 0x74, 0x11, 0xd7, 0x8a, 0xb6, 0x8c, 0xe8, 0x9c, 0x75, 0x39, 0x68, 0x49
};
uint8_t g_sample_rse_0_cert_h8[8] = {
  0xb6, 0x8c, 0xe8, 0x9c, 0x75, 0x39, 0x68, 0x49
};
uint8_t g_sample_rse_0_cert_h10[10] = {
  0xd7, 0x8a, 0xb6, 0x8c, 0xe8, 0x9c, 0x75, 0x39, 0x68, 0x49
};
uint8_t g_sample_rse_0_cr_priv_key[] = {
  0x34, 0x8C, 0x78, 0xC8, 0x01, 0x38, 0x79, 0x00, 0x23, 0xF6, 0x5B, 0x46, 0x71, 0x80, 0x38, 0x0C,
  0xF0, 0x74, 0x9F, 0x8C, 0xB2, 0x8F, 0x6E, 0xF4, 0x52, 0x42, 0x22, 0xD5, 0xE9, 0x40, 0xF0, 0x67
};
uint8_t g_sample_rse_0_recon_priv[] = {
  0xEE, 0x89, 0xD4, 0x23, 0x96, 0x3A, 0x9A, 0xA6, 0x0D, 0x88, 0x24, 0x9D, 0xDA, 0x0F, 0x99, 0x24,
  0x16, 0x37, 0xC0, 0xB5, 0xC7, 0xC5, 0x99, 0xE1, 0x6E, 0xBA, 0x01, 0x48, 0x4D, 0x10, 0x2E, 0x75
};
// 본 라이브러리의 검증된 개인키 재구성 기능(Openssl)을 이용하여 생성된 개인키. 아래 공개키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_0_priv_key[] = {
  0xE3, 0x2A, 0x65, 0x06, 0xDF, 0xBC, 0xEA, 0x1D, 0x7B, 0x27, 0x70, 0x6F, 0x9E, 0xA7, 0x5B, 0x86,
  0xE4, 0xC1, 0x8C, 0x0F, 0xED, 0x6F, 0x5F, 0x55, 0x19, 0xCC, 0xF7, 0x86, 0x2A, 0x24, 0x29, 0x60
};
// 본 라이브러리의 검증된 공개키 재구성 기능(Openssl)을 이용하여 생성된 공개키. 위 개인키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_0_cert_pub_key[DOT2_EC_256_PUB_KEY_LEN] = {
  kDot2ECPointForm_Uncompressed,
  0x87, 0x7F, 0xD3, 0x17, 0x1A, 0x4E, 0x54, 0xAA, 0x51, 0xF6, 0x96, 0x31, 0xD2, 0xFA, 0xF3, 0x45,
  0x79, 0x51, 0x89, 0x48, 0x79, 0x75, 0x71, 0x58, 0xCA, 0xE5, 0xB1, 0x48, 0xBB, 0x00, 0x1A, 0xA6,
  0x4E, 0x86, 0xF3, 0xC5, 0x92, 0x37, 0x4E, 0xF1, 0xFF, 0x4A, 0x5E, 0xE3, 0xDE, 0x12, 0x6B, 0x6C,
  0xC8, 0xED, 0xE4, 0x28, 0xC1, 0x09, 0xEB, 0x66, 0xAB, 0x81, 0x47, 0xB7, 0xDD, 0xBF, 0x95, 0x30
};
uint64_t g_sample_rse_0_valid_time = 1572480000000239ULL;
uint64_t g_sample_rse_0_valid_start = 499525388000000ULL;
uint64_t g_sample_rse_0_valid_end = 502585388000000ULL;
Dot2PSID g_sample_rse_0_psid = 135;
Dot2Latitude g_sample_rse_0_valid_lat = 374856150;
Dot2Longitude g_sample_rse_0_valid_lon = 1270392830;
Dot2Elevation g_sample_rse_0_valid_elev = 500;
char g_sample_rse_0_key_cmhf_name[] = "a_135_191030.130303-191204.230303_key.cmhf2";
uint8_t g_sample_rse_0_cmhf[] = {
  0x49, 0x54, 0x45, 0x4B, 0x01, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C, 0x1D, 0xF4, 0xD8, 0x2C, 0x01, 0x01, 0x00, 0x00, 0x00, 0x87,
  0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x00, 0x55, 0x95, 0xB1, 0xBD, 0x1F,
  0xB5, 0x95, 0x23, 0x57, 0x1C, 0x61, 0xE7, 0x28, 0x7F, 0x15, 0x3A, 0x83, 0xF6, 0x39, 0x5E, 0x9F,
  0x74, 0x11, 0xD7, 0x8A, 0xB6, 0x8C, 0xE8, 0x9C, 0x75, 0x39, 0x68, 0x49, 0x02, 0x00, 0xE3, 0x2A,
  0x65, 0x06, 0xDF, 0xBC, 0xEA, 0x1D, 0x7B, 0x27, 0x70, 0x6F, 0x9E, 0xA7, 0x5B, 0x86, 0xE4, 0xC1,
  0x8C, 0x0F, 0xED, 0x6F, 0x5F, 0x55, 0x19, 0xCC, 0xF7, 0x86, 0x2A, 0x24, 0x29, 0x60, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9,
  0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66, 0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1D, 0xC6, 0x27, 0x0C, 0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B,
  0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x45, 0x35, 0x4A,
  0x04, 0xAD, 0x1A, 0x94, 0x82, 0x17, 0x25, 0xCA, 0x0F, 0x92, 0xF2, 0xB9, 0x1B, 0x47, 0x6C, 0xB1,
  0x2C, 0xD3, 0x95, 0xC1, 0xC3, 0xDD, 0x51, 0x85, 0x05, 0x21, 0x81, 0x3B, 0x93, 0x2C, 0xD1, 0xDC,
  0x66, 0xF8, 0x9B, 0x44
};
size_t g_sample_rse_0_cmhf_size = sizeof(g_sample_rse_0_cmhf);


/* 샘플 rse-1 인증서 (Penta-security 66DF39628256B84E/rse-1/downloadFiles/96d402aa72fd8969.cert)
 {
   version = 3
   type = implicit
   issuer {
      sha256AndDigest = 0x163f2b7bc99253f4
   }
   toBeSigned {
      id {
         binaryId = 0x66df39628256b84e
      }
      cracaId = 0x000000
      crlSeries = 0
      validityPeriod {
         start = 502585388
         duration {
            hours = 850
         }
      }
      region {
         circularRegion {
            center {
               latitude = 374856150
               longitude = 1270392830
            }
            radius = 3000
         }
      }
      appPermissions[0] {
         psid = 135
      }
      verifyKeyIndicator {
         reconstructionValue {
            compressed-y-0 = 0x80f40c4e3f3676ebf50b9dfe28cae39821f369632a7666ebc273848787a38b1b
         }
      }
   }
} */
uint8_t g_sample_rse_1_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0xF4, 0xD8, 0x2C,
  0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01,
  0x00, 0x01, 0x87, 0x81, 0x82, 0x80, 0xF4, 0x0C, 0x4E, 0x3F, 0x36, 0x76, 0xEB, 0xF5, 0x0B, 0x9D,
  0xFE, 0x28, 0xCA, 0xE3, 0x98, 0x21, 0xF3, 0x69, 0x63, 0x2A, 0x76, 0x66, 0xEB, 0xC2, 0x73, 0x84,
  0x87, 0x87, 0xA3, 0x8B, 0x1B
};
size_t g_sample_rse_1_cert_size = sizeof(g_sample_rse_1_cert);
uint8_t g_sample_rse_1_cert_reconstruct_value[DOT2_EC_256_COMPRESSED_PUB_KEY_LEN] = {
  kDot2ECPointForm_Compressed_y_0,
  0x80, 0xf4, 0x0c, 0x4e, 0x3f, 0x36, 0x76, 0xeb, 0xf5, 0x0b, 0x9d, 0xfe, 0x28, 0xca, 0xe3, 0x98,
  0x21, 0xf3, 0x69, 0x63, 0x2a, 0x76, 0x66, 0xeb, 0xc2, 0x73, 0x84, 0x87, 0x87, 0xa3, 0x8b, 0x1b
};
uint8_t g_sample_rse_1_cert_issuer_h8[8] = {
  0x16, 0x3f, 0x2b, 0x7b, 0xc9, 0x92, 0x53, 0xf4
};
uint8_t g_sample_rse_1_cert_h[32] = {
  0x15, 0x89, 0xDA, 0xDC, 0x6D, 0xB1, 0xC2, 0x14, 0x5D, 0x03, 0xBC, 0x69, 0xBB, 0xCE, 0xE6, 0xFB,
  0xF0, 0xA7, 0x4B, 0xBD, 0xC9, 0x3D, 0x51, 0xDD, 0x96, 0xD4, 0x02, 0xAA, 0x72, 0xFD, 0x89, 0x69
};
uint8_t g_sample_rse_1_cert_h8[8] = {
  0x96, 0xD4, 0x02, 0xAA, 0x72, 0xFD, 0x89, 0x69
};
uint8_t g_sample_rse_1_cert_h10[10] = {
  0x51, 0xDD, 0x96, 0xD4, 0x02, 0xAA, 0x72, 0xFD, 0x89, 0x69
};
uint8_t g_sample_rse_1_cr_priv_key[] = { // 66DF39628256B84E/rse-1/dwnl_sgn.priv
  0xAE, 0x71, 0x98, 0xA3, 0x62, 0xCB, 0xD2, 0xBB, 0x79, 0x45, 0x9F, 0x97, 0x28, 0x43, 0x9B, 0x0C,
  0x6E, 0x19, 0xDC, 0x7F, 0xB0, 0x44, 0xE3, 0xFA, 0xC1, 0x85, 0xB1, 0x4D, 0xA2, 0x35, 0xC2, 0x04
};
uint8_t g_sample_rse_1_recon_priv[] = { // 66DF39628256B84E/rse-1/downloadFiles/96d402aa72fd8969.s
  0xF4, 0x2F, 0x98, 0xD5, 0x92, 0x69, 0xF2, 0x1C, 0x86, 0x2C, 0x25, 0x0E, 0xC0, 0x3F, 0x5D, 0x0E,
  0xB2, 0x2F, 0xA3, 0x53, 0xC6, 0x1C, 0x47, 0x70, 0xB8, 0xF1, 0xA4, 0x20, 0xC8, 0x93, 0x39, 0x9D
};
// 본 라이브러리의 검증된 개인키 재구성 기능(Openssl)을 이용하여 생성된 개인키. 아래 공개키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_1_priv_key[] = {
  0x7D, 0x10, 0x68, 0xB7, 0xFA, 0xDC, 0x2E, 0xD5, 0x1E, 0x6C, 0xCC, 0x90, 0x2E, 0x36, 0xCE, 0x2E,
  0x89, 0xDF, 0xBC, 0x30, 0xC6, 0xFF, 0x3E, 0xE7, 0x5C, 0x92, 0x74, 0xA9, 0x09, 0x65, 0x97, 0x63
};
// 본 라이브러리의 검증된 공개키 재구성 기능(Openssl)을 이용하여 생성된 공개키. 위 개인키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_1_cert_pub_key[DOT2_EC_256_PUB_KEY_LEN] = {
  kDot2ECPointForm_Uncompressed,
  0xA4, 0x4B, 0x71, 0xE0, 0x60, 0x2B, 0xA2, 0x2F, 0xB0, 0x4B, 0x88, 0x17, 0xC2, 0xEF, 0xE7, 0xF2,
  0x40, 0x10, 0x54, 0x44, 0x25, 0xA4, 0x10, 0xB1, 0x72, 0x3B, 0xE7, 0x3D, 0x6F, 0xF6, 0x8A, 0xBB,
  0x87, 0x85, 0x82, 0x6C, 0x92, 0x86, 0xBC, 0x90, 0x26, 0x15, 0x2E, 0xA6, 0xF3, 0x86, 0x9D, 0xF3,
  0xB4, 0x41, 0xD0, 0x2F, 0x25, 0x97, 0xBD, 0xF0, 0xDF, 0xC8, 0xF6, 0x4B, 0xB8, 0xFA, 0xB1, 0xA2
};
uint64_t g_sample_rse_1_valid_time = 1576454400000174ULL;
uint64_t g_sample_rse_1_valid_start = 502585388000000ULL;
uint64_t g_sample_rse_1_valid_end = 505645388000000ULL;
Dot2PSID g_sample_rse_1_psid = 135;
Dot2Latitude g_sample_rse_1_valid_lat = 374856151;
Dot2Longitude g_sample_rse_1_valid_lon = 1270392831;
Dot2Elevation g_sample_rse_1_valid_elev = 501;
char g_sample_rse_1_key_cmhf_name[] = "a_135_191204.230303-200109.090303_key.cmhf2";
uint8_t g_sample_rse_1_cmhf[] = {
  0x49, 0x54, 0x45, 0x4B, 0x01, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1D, 0xF4, 0xD8, 0x2C, 0x1E, 0x23, 0x89, 0x4C, 0x01, 0x01, 0x00, 0x00, 0x00, 0x87,
  0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x00, 0x55, 0x15, 0x89, 0xDA, 0xDC,
  0x6D, 0xB1, 0xC2, 0x14, 0x5D, 0x03, 0xBC, 0x69, 0xBB, 0xCE, 0xE6, 0xFB, 0xF0, 0xA7, 0x4B, 0xBD,
  0xC9, 0x3D, 0x51, 0xDD, 0x96, 0xD4, 0x02, 0xAA, 0x72, 0xFD, 0x89, 0x69, 0x02, 0x00, 0x7D, 0x10,
  0x68, 0xB7, 0xFA, 0xDC, 0x2E, 0xD5, 0x1E, 0x6C, 0xCC, 0x90, 0x2E, 0x36, 0xCE, 0x2E, 0x89, 0xDF,
  0xBC, 0x30, 0xC6, 0xFF, 0x3E, 0xE7, 0x5C, 0x92, 0x74, 0xA9, 0x09, 0x65, 0x97, 0x63, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9,
  0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66, 0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1D, 0xF4, 0xD8, 0x2C, 0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B,
  0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x80, 0xF4, 0x0C, 0x4E,
  0x3F, 0x36, 0x76, 0xEB, 0xF5, 0x0B, 0x9D, 0xFE, 0x28, 0xCA, 0xE3, 0x98, 0x21, 0xF3, 0x69, 0x63,
  0x2A, 0x76, 0x66, 0xEB, 0xC2, 0x73, 0x84, 0x87, 0x87, 0xA3, 0x8B, 0x1B, 0x57, 0x0B, 0xD2, 0x07,
  0x1A, 0x0B, 0xE5, 0x9B
};
size_t g_sample_rse_1_cmhf_size = sizeof(g_sample_rse_1_cmhf);


/* 샘플 rse-2 인증서 (Penta-security 66DF39628256B84E/rse-2/downloadFiles/e2448d58b342bf8a.cert)
{
   version = 3
   type = implicit
   issuer {
      sha256AndDigest = 0x163f2b7bc99253f4
   }
   toBeSigned {
      id {
         binaryId = 0x66df39628256b84e
      }
      cracaId = 0x000000
      crlSeries = 0
      validityPeriod {
         start = 505645388
         duration {
            hours = 850
         }
      }
      region {
         circularRegion {
            center {
               latitude = 374856150
               longitude = 1270392830
            }
            radius = 3000
         }
      }
      appPermissions[0] {
         psid = 135
      }
      verifyKeyIndicator {
         reconstructionValue {
            compressed-y-1 = 0x637e4d5d2f4069572c590f3f9a09e7e3ed74b1830c8051bc85e1f95c56675539
         }
      }
   }
} */
uint8_t g_sample_rse_2_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x23, 0x89, 0x4C,
  0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01,
  0x00, 0x01, 0x87, 0x81, 0x83, 0x63, 0x7E, 0x4D, 0x5D, 0x2F, 0x40, 0x69, 0x57, 0x2C, 0x59, 0x0F,
  0x3F, 0x9A, 0x09, 0xE7, 0xE3, 0xED, 0x74, 0xB1, 0x83, 0x0C, 0x80, 0x51, 0xBC, 0x85, 0xE1, 0xF9,
  0x5C, 0x56, 0x67, 0x55, 0x39
};
size_t g_sample_rse_2_cert_size = sizeof(g_sample_rse_2_cert);
uint8_t g_sample_rse_2_cert_reconstruct_value[DOT2_EC_256_COMPRESSED_PUB_KEY_LEN] = {
  kDot2ECPointForm_Compressed_y_1,
  0x63, 0x7e, 0x4d, 0x5d, 0x2f, 0x40, 0x69, 0x57, 0x2c, 0x59, 0x0f, 0x3f, 0x9a, 0x09, 0xe7, 0xe3,
  0xed, 0x74, 0xb1, 0x83, 0x0c, 0x80, 0x51, 0xbc, 0x85, 0xe1, 0xf9, 0x5c, 0x56, 0x67, 0x55, 0x39
};
uint8_t g_sample_rse_2_cert_issuer_h8[8] = {
  0x16, 0x3f, 0x2b, 0x7b, 0xc9, 0x92, 0x53, 0xf4
};
uint8_t g_sample_rse_2_cert_h[32] = {
  0x88, 0xF3, 0x53, 0x11, 0xEA, 0x8B, 0x4D, 0x7F, 0x75, 0x34, 0x76, 0x76, 0xEB, 0xC3, 0x6E, 0x17,
  0xBC, 0x82, 0x2F, 0xBF, 0xC8, 0x6B, 0xE7, 0xD7, 0xE2, 0x44, 0x8D, 0x58, 0xB3, 0x42, 0xBF, 0x8A
};
uint8_t g_sample_rse_2_cert_h8[8] = {
  0xE2, 0x44, 0x8D, 0x58, 0xB3, 0x42, 0xBF, 0x8A
};
uint8_t g_sample_rse_2_cert_h10[10] = {
  0xE7, 0xD7, 0xE2, 0x44, 0x8D, 0x58, 0xB3, 0x42, 0xBF, 0x8A
};
uint8_t g_sample_rse_2_cr_priv_key[] = { // 66DF39628256B84E/rse-2/dwnl_sgn.priv
  0xB6, 0x59, 0x0B, 0x6B, 0x74, 0x76, 0x42, 0x25, 0xD0, 0x6A, 0x69, 0x7F, 0xEF, 0xC9, 0x2F, 0xE8,
  0x1C, 0xDD, 0x91, 0xAA, 0x0B, 0xBD, 0x6C, 0x00, 0x9C, 0xBC, 0xB5, 0x34, 0xA1, 0x5F, 0xAD, 0x42
};
uint8_t g_sample_rse_2_recon_priv[] = { // 66DF39628256B84E/rse-2/downloadFiles/e2448d58b342bf8a.s
  0x02, 0xE0, 0xE4, 0xF8, 0x1F, 0xA6, 0x81, 0x00, 0x7C, 0x81, 0x5B, 0x9B, 0x4D, 0xCF, 0xCF, 0x08,
  0x00, 0x16, 0xD1, 0xD4, 0x83, 0xB9, 0x17, 0x4D, 0x43, 0x3E, 0xC3, 0xCC, 0xF6, 0xFE, 0x38, 0x0C
};
// 본 라이브러리의 검증된 개인키 재구성 기능(Openssl)을 이용하여 생성된 개인키. 아래 공개키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_2_priv_key[] = {
  0xDF, 0x28, 0xD8, 0xDA, 0x1D, 0x14, 0x19, 0x5D, 0x21, 0x0B, 0xF2, 0x47, 0x90, 0x6B, 0xA3, 0x17,
  0x34, 0x2B, 0x9D, 0x17, 0x4E, 0x2F, 0x09, 0xA8, 0x19, 0x9E, 0x6C, 0x1A, 0x6D, 0x00, 0x7A, 0x6F
};
// 본 라이브러리의 검증된 공개키 재구성 기능(Openssl)을 이용하여 생성된 공개키. 위 개인키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_2_cert_pub_key[DOT2_EC_256_PUB_KEY_LEN] = {
  kDot2ECPointForm_Uncompressed,
  0x0B, 0x4B, 0x90, 0x2D, 0xCD, 0xD3, 0xEE, 0x45, 0x82, 0x40, 0x36, 0xA4, 0xDD, 0x87, 0xE8, 0xCB,
  0x0B, 0x4B, 0x11, 0x69, 0xB0, 0xB3, 0x26, 0x11, 0x9F, 0x41, 0xB0, 0xE7, 0xCE, 0xCD, 0xDC, 0x19,
  0x1B, 0xBD, 0x98, 0x51, 0x5D, 0xD3, 0x52, 0x56, 0x63, 0x82, 0xB6, 0x2C, 0xF2, 0x15, 0x5E, 0x53,
  0x95, 0x0D, 0xAD, 0x60, 0xBB, 0x92, 0xAE, 0x2E, 0x77, 0xD7, 0xA5, 0xA3, 0x9C, 0x40, 0xF1, 0x00
};
uint64_t g_sample_rse_2_valid_time = 1578614400000163ULL;
uint64_t g_sample_rse_2_valid_start = 505645388000000ULL;
uint64_t g_sample_rse_2_valid_end = 508705388000000ULL;
Dot2PSID g_sample_rse_2_psid = 135;
Dot2Latitude g_sample_rse_2_valid_lat = 374856152;
Dot2Longitude g_sample_rse_2_valid_lon = 1270392832;
Dot2Elevation g_sample_rse_2_valid_elev = 502;
char g_sample_rse_2_key_cmhf_name[] = "a_135_200109.090303-200213.190303_key.cmhf2";
uint8_t g_sample_rse_2_cmhf[] = {
  0x49, 0x54, 0x45, 0x4B, 0x01, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1E, 0x23, 0x89, 0x4C, 0x1E, 0x52, 0x3A, 0x6C, 0x01, 0x01, 0x00, 0x00, 0x00, 0x87,
  0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x00, 0x55, 0x88, 0xF3, 0x53, 0x11,
  0xEA, 0x8B, 0x4D, 0x7F, 0x75, 0x34, 0x76, 0x76, 0xEB, 0xC3, 0x6E, 0x17, 0xBC, 0x82, 0x2F, 0xBF,
  0xC8, 0x6B, 0xE7, 0xD7, 0xE2, 0x44, 0x8D, 0x58, 0xB3, 0x42, 0xBF, 0x8A, 0x02, 0x00, 0xDF, 0x28,
  0xD8, 0xDA, 0x1D, 0x14, 0x19, 0x5D, 0x21, 0x0B, 0xF2, 0x47, 0x90, 0x6B, 0xA3, 0x17, 0x34, 0x2B,
  0x9D, 0x17, 0x4E, 0x2F, 0x09, 0xA8, 0x19, 0x9E, 0x6C, 0x1A, 0x6D, 0x00, 0x7A, 0x6F, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9,
  0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66, 0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1E, 0x23, 0x89, 0x4C, 0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B,
  0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x83, 0x63, 0x7E, 0x4D, 0x5D,
  0x2F, 0x40, 0x69, 0x57, 0x2C, 0x59, 0x0F, 0x3F, 0x9A, 0x09, 0xE7, 0xE3, 0xED, 0x74, 0xB1, 0x83,
  0x0C, 0x80, 0x51, 0xBC, 0x85, 0xE1, 0xF9, 0x5C, 0x56, 0x67, 0x55, 0x39, 0xAC, 0x11, 0x58, 0xC2,
  0xB6, 0x33, 0x29, 0xDA
};
size_t g_sample_rse_2_cmhf_size = sizeof(g_sample_rse_2_cmhf);


/* 샘플 rse-3 인증서 (Penta-security 66DF39628256B84E/rse-3/downloadFiles/fe2755972f9262bc.cert)
{
   version = 3
   type = implicit
   issuer {
      sha256AndDigest = 0x163f2b7bc99253f4
   }
   toBeSigned {
      id {
         binaryId = 0x66df39628256b84e
      }
      cracaId = 0x000000
      crlSeries = 0
      validityPeriod {
         start = 508705388
         duration {
            hours = 850
         }
      }
      region {
         circularRegion {
            center {
               latitude = 374856150
               longitude = 1270392830
            }
            radius = 3000
         }
      }
      appPermissions[0] {
         psid = 135
      }
      verifyKeyIndicator {
         reconstructionValue {
            compressed-y-1 = 0xdb1ff81d8b17800189d2ca6b0f6e630770112f016e8e1df609565bcc1bebd206
         }
      }
   }
} */
uint8_t g_sample_rse_3_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x52, 0x3A, 0x6C,
  0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01,
  0x00, 0x01, 0x87, 0x81, 0x83, 0xDB, 0x1F, 0xF8, 0x1D, 0x8B, 0x17, 0x80, 0x01, 0x89, 0xD2, 0xCA,
  0x6B, 0x0F, 0x6E, 0x63, 0x07, 0x70, 0x11, 0x2F, 0x01, 0x6E, 0x8E, 0x1D, 0xF6, 0x09, 0x56, 0x5B,
  0xCC, 0x1B, 0xEB, 0xD2, 0x06
};
size_t g_sample_rse_3_cert_size = sizeof(g_sample_rse_3_cert);
uint8_t g_sample_rse_3_cert_reconstruct_value[DOT2_EC_256_COMPRESSED_PUB_KEY_LEN] = {
  kDot2ECPointForm_Compressed_y_1,
  0xdb, 0x1f, 0xf8, 0x1d, 0x8b, 0x17, 0x80, 0x01, 0x89, 0xd2, 0xca, 0x6b, 0x0f, 0x6e, 0x63, 0x07,
  0x70, 0x11, 0x2f, 0x01, 0x6e, 0x8e, 0x1d, 0xf6, 0x09, 0x56, 0x5b, 0xcc, 0x1b, 0xeb, 0xd2, 0x06
};
uint8_t g_sample_rse_3_cert_issuer_h8[8] = {
  0x16, 0x3f, 0x2b, 0x7b, 0xc9, 0x92, 0x53, 0xf4
};
uint8_t g_sample_rse_3_cert_h[32] = {
  0x9B, 0xAF, 0x40, 0x23, 0x39, 0xE7, 0x6C, 0xF1, 0x23, 0xAA, 0x40, 0xB2, 0x70, 0x6E, 0x0B, 0xF0,
  0x13, 0x05, 0x4A, 0x39, 0xE6, 0x65, 0x36, 0x93, 0xFE, 0x27, 0x55, 0x97, 0x2F, 0x92, 0x62, 0xBC
};
uint8_t g_sample_rse_3_cert_h8[8] = {
  0xFE, 0x27, 0x55, 0x97, 0x2F, 0x92, 0x62, 0xBC
};
uint8_t g_sample_rse_3_cert_h10[10] = {
  0x36, 0x93, 0xFE, 0x27, 0x55, 0x97, 0x2F, 0x92, 0x62, 0xBC
};
uint8_t g_sample_rse_3_cr_priv_key[] = { // 66DF39628256B84E/rse-3/dwnl_sgn.priv
  0xCF, 0xFE, 0x0F, 0x3B, 0x32, 0xB5, 0xA9, 0x1D, 0x9F, 0x77, 0x56, 0xA4, 0xAA, 0x21, 0x38, 0x5E,
  0x1B, 0xD8, 0x39, 0x34, 0x05, 0x90, 0xE5, 0x7A, 0x50, 0xD9, 0x75, 0x9A, 0x7E, 0x1C, 0xA9, 0xA8
};
uint8_t g_sample_rse_3_recon_priv[] = { // 66DF39628256B84E/rse-3/downloadFiles/fe2755972f9262bc.s
  0xD9, 0xEA, 0xFC, 0x49, 0xAC, 0x01, 0x5C, 0xBA, 0xCB, 0x5B, 0xCC, 0x74, 0xBC, 0xC1, 0x1B, 0x44,
  0xDF, 0x9B, 0x43, 0x56, 0x95, 0x76, 0x6C, 0x52, 0x19, 0x7A, 0xC2, 0x3B, 0xFC, 0x93, 0xFF, 0xC1
};
// 본 라이브러리의 검증된 개인키 재구성 기능(Openssl)을 이용하여 생성된 개인키. 아래 공개키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_3_priv_key[] = {
  0x1C, 0x62, 0xDA, 0xBC, 0xED, 0x99, 0x15, 0x30, 0xF6, 0xE7, 0x17, 0x5A, 0x35, 0xFE, 0xB5, 0x23,
  0x5D, 0xF1, 0x49, 0x10, 0xC2, 0x12, 0x49, 0xF8, 0x9C, 0x78, 0xA9, 0xF8, 0x0A, 0xB0, 0xFF, 0xF3
};
// 본 라이브러리의 검증된 공개키 재구성 기능(Openssl)을 이용하여 생성된 공개키. 위 개인키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_3_cert_pub_key[DOT2_EC_256_PUB_KEY_LEN] = {
  kDot2ECPointForm_Uncompressed,
  0x7F, 0x20, 0x32, 0x06, 0x16, 0xAC, 0xEE, 0x95, 0x4E, 0x9B, 0x3E, 0x48, 0x58, 0xD2, 0x05, 0x24,
  0xA4, 0xA5, 0x25, 0xFA, 0xFD, 0x7C, 0x62, 0x0B, 0x75, 0x16, 0xA9, 0xBA, 0x66, 0x55, 0x8D, 0xE9,
  0x95, 0x19, 0x47, 0xCF, 0x7E, 0xC1, 0x0D, 0x95, 0x2F, 0xBA, 0x79, 0x6D, 0x94, 0xD8, 0x0F, 0xC7,
  0x99, 0x04, 0x45, 0xF7, 0x4F, 0x2D, 0x96, 0x64, 0x56, 0x69, 0xC1, 0x03, 0x8B, 0xC3, 0x79, 0x39
};
uint64_t g_sample_rse_3_valid_time = 1581724800000188ULL;
uint64_t g_sample_rse_3_valid_start = 508705388000000ULL;
uint64_t g_sample_rse_3_valid_end = 511765388000000ULL;
Dot2PSID g_sample_rse_3_psid = 135;
Dot2Latitude g_sample_rse_3_valid_lat = 374856153;
Dot2Longitude g_sample_rse_3_valid_lon = 1270392833;
Dot2Elevation g_sample_rse_3_valid_elev = 503;
char g_sample_rse_3_key_cmhf_name[] = "a_135_200213.190303-200320.050303_key.cmhf2";
uint8_t g_sample_rse_3_cmhf[] = {
  0x49, 0x54, 0x45, 0x4B, 0x01, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1E, 0x52, 0x3A, 0x6C, 0x1E, 0x80, 0xEB, 0x8C, 0x01, 0x01, 0x00, 0x00, 0x00, 0x87,
  0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x00, 0x55, 0x9B, 0xAF, 0x40, 0x23,
  0x39, 0xE7, 0x6C, 0xF1, 0x23, 0xAA, 0x40, 0xB2, 0x70, 0x6E, 0x0B, 0xF0, 0x13, 0x05, 0x4A, 0x39,
  0xE6, 0x65, 0x36, 0x93, 0xFE, 0x27, 0x55, 0x97, 0x2F, 0x92, 0x62, 0xBC, 0x02, 0x00, 0x1C, 0x62,
  0xDA, 0xBC, 0xED, 0x99, 0x15, 0x30, 0xF6, 0xE7, 0x17, 0x5A, 0x35, 0xFE, 0xB5, 0x23, 0x5D, 0xF1,
  0x49, 0x10, 0xC2, 0x12, 0x49, 0xF8, 0x9C, 0x78, 0xA9, 0xF8, 0x0A, 0xB0, 0xFF, 0xF3, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9,
  0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66, 0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1E, 0x52, 0x3A, 0x6C, 0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B,
  0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x83, 0xDB, 0x1F, 0xF8, 0x1D,
  0x8B, 0x17, 0x80, 0x01, 0x89, 0xD2, 0xCA, 0x6B, 0x0F, 0x6E, 0x63, 0x07, 0x70, 0x11, 0x2F, 0x01,
  0x6E, 0x8E, 0x1D, 0xF6, 0x09, 0x56, 0x5B, 0xCC, 0x1B, 0xEB, 0xD2, 0x06, 0x47, 0xA6, 0x92, 0xCB,
  0x2F, 0x15, 0xD5, 0x7A
};
size_t g_sample_rse_3_cmhf_size = sizeof(g_sample_rse_3_cmhf);


/* 샘플 rse-4 인증서 (Penta-security 66DF39628256B84E/rse-4/downloadFiles/f01d5a943c74a77a.cert)
{
   version = 3
   type = implicit
   issuer {
      sha256AndDigest = 0x163f2b7bc99253f4
   }
   toBeSigned {
      id {
         binaryId = 0x66df39628256b84e
      }
      cracaId = 0x000000
      crlSeries = 0
      validityPeriod {
         start = 511765388
         duration {
            hours = 850
         }
      }
      region {
         circularRegion {
            center {
               latitude = 374856150
               longitude = 1270392830
            }
            radius = 3000
         }
      }
      appPermissions[0] {
         psid = 135
      }
      verifyKeyIndicator {
         reconstructionValue {
            compressed-y-0 = 0x144e1bb51092e12269d42017e7fe06fe32d3493b0e3b29c0682004048b747730
         }
      }
   }
} */
uint8_t g_sample_rse_4_cert[] = {
  0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x80, 0xEB, 0x8C,
  0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01,
  0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x4E, 0x1B, 0xB5, 0x10, 0x92, 0xE1, 0x22, 0x69, 0xD4, 0x20,
  0x17, 0xE7, 0xFE, 0x06, 0xFE, 0x32, 0xD3, 0x49, 0x3B, 0x0E, 0x3B, 0x29, 0xC0, 0x68, 0x20, 0x04,
  0x04, 0x8B, 0x74, 0x77, 0x30
};
size_t g_sample_rse_4_cert_size = sizeof(g_sample_rse_4_cert);
uint8_t g_sample_rse_4_cert_reconstruct_value[DOT2_EC_256_COMPRESSED_PUB_KEY_LEN] = {
  kDot2ECPointForm_Compressed_y_0,
  0x14, 0x4e, 0x1b, 0xb5, 0x10, 0x92, 0xe1, 0x22, 0x69, 0xd4, 0x20, 0x17, 0xe7, 0xfe, 0x06, 0xfe,
  0x32, 0xd3, 0x49, 0x3b, 0x0e, 0x3b, 0x29, 0xc0, 0x68, 0x20, 0x04, 0x04, 0x8b, 0x74, 0x77, 0x30
};
uint8_t g_sample_rse_4_cert_issuer_h8[8] = {
  0x16, 0x3f, 0x2b, 0x7b, 0xc9, 0x92, 0x53, 0xf4
};
uint8_t g_sample_rse_4_cert_h[32] = {
  0x9C, 0x36, 0x62, 0x26, 0x4F, 0xEC, 0x09, 0x81, 0x2F, 0xD7, 0x25, 0x86, 0xE4, 0xA7, 0x86, 0x13,
  0x3F, 0xF5, 0x31, 0x97, 0x4C, 0xD5, 0x36, 0xE3, 0xF0, 0x1D, 0x5A, 0x94, 0x3C, 0x74, 0xA7, 0x7A
};
uint8_t g_sample_rse_4_cert_h8[8] = {
  0xF0, 0x1D, 0x5A, 0x94, 0x3C, 0x74, 0xA7, 0x7A
};
uint8_t g_sample_rse_4_cert_h10[10] = {
  0x36, 0xE3, 0xF0, 0x1D, 0x5A, 0x94, 0x3C, 0x74, 0xA7, 0x7A
};
uint8_t g_sample_rse_4_cr_priv_key[] = { // 66DF39628256B84E/rse-4/dwnl_sgn.priv
  0x2A, 0xC8, 0xC4, 0x97, 0xAE, 0x41, 0xE8, 0xAB, 0x9B, 0x12, 0xF5, 0xEA, 0xF0, 0x05, 0xE1, 0x53,
  0x65, 0x7C, 0x94, 0x27, 0xC7, 0x7B, 0x24, 0xA5, 0x77, 0xC1, 0xB8, 0x07, 0x61, 0x54, 0xAE, 0x85
};
uint8_t g_sample_rse_4_recon_priv[] = { // 66DF39628256B84E/rse-4/downloadFiles/f01d5a943c74a77a.s
  0xCF, 0x56, 0xAF, 0x08, 0xD7, 0xAA, 0xF7, 0xFA, 0x24, 0x28, 0x17, 0x36, 0x4B, 0xF6, 0x02, 0xC4,
  0x2E, 0x26, 0xE0, 0xC6, 0x25, 0x10, 0x49, 0xA0, 0x5E, 0xB2, 0xC1, 0x3D, 0x87, 0xFA, 0x0E, 0x50
};
// 본 라이브러리의 검증된 개인키 재구성 기능(Openssl)을 이용하여 생성된 개인키. 아래 공개키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_4_priv_key[] = {
  0xE2, 0xEC, 0xCE, 0x40, 0xCB, 0xB8, 0x43, 0x49, 0xC0, 0x15, 0xE5, 0x77, 0x9C, 0x1C, 0x5E, 0x58,
  0x9A, 0xC0, 0xA0, 0x7C, 0xBF, 0x19, 0xEE, 0xEB, 0x69, 0x4A, 0x51, 0x62, 0x3A, 0xAA, 0x32, 0xED
};
// 본 라이브러리의 검증된 공개키 재구성 기능(Openssl)을 이용하여 생성된 공개키. 위 개인키와 키쌍 유효성(Openssl) 확인 완료.
uint8_t g_sample_rse_4_cert_pub_key[DOT2_EC_256_PUB_KEY_LEN] = {
  kDot2ECPointForm_Uncompressed,
  0x46, 0xA2, 0x17, 0x93, 0xDB, 0x80, 0x76, 0x29, 0x5E, 0xC6, 0xB6, 0xD7, 0x22, 0xAB, 0xBD, 0xF1,
  0x7F, 0xC4, 0x32, 0xF0, 0x2C, 0xA1, 0xD4, 0x11, 0x2A, 0xAC, 0x86, 0xDD, 0xB8, 0xDC, 0x9C, 0x4D,
  0x33, 0xE9, 0x8F, 0x28, 0xFE, 0xAF, 0xFF, 0xA1, 0x54, 0x6A, 0xBF, 0x67, 0x9F, 0x19, 0x15, 0xDC,
  0x99, 0x66, 0x4D, 0xC1, 0x1E, 0xC5, 0xF0, 0x0C, 0xC5, 0x8F, 0x34, 0x94, 0x18, 0xD4, 0x35, 0xB4
};
uint64_t g_sample_rse_4_valid_time = 1584748800000159ULL;
uint64_t g_sample_rse_4_valid_start = 511765388000000ULL;
uint64_t g_sample_rse_4_valid_end = 514825388000000ULL;
Dot2PSID g_sample_rse_4_psid = 135;
Dot2Latitude g_sample_rse_4_valid_lat = 374856154;
Dot2Longitude g_sample_rse_4_valid_lon = 1270392834;
Dot2Elevation g_sample_rse_4_valid_elev = 504;
char g_sample_rse_4_key_cmhf_name[] = "a_135_200320.050303-200424.150303_key.cmhf2";
uint8_t g_sample_rse_4_cmhf[] = {
  0x49, 0x54, 0x45, 0x4B, 0x01, 0x16, 0x3F, 0x2B, 0x7B, 0xC9, 0x92, 0x53, 0xF4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1E, 0x80, 0xEB, 0x8C, 0x1E, 0xAF, 0x9C, 0xAC, 0x01, 0x01, 0x00, 0x00, 0x00, 0x87,
  0x16, 0x57, 0xD9, 0xD6, 0x4B, 0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x00, 0x55, 0x9C, 0x36, 0x62, 0x26,
  0x4F, 0xEC, 0x09, 0x81, 0x2F, 0xD7, 0x25, 0x86, 0xE4, 0xA7, 0x86, 0x13, 0x3F, 0xF5, 0x31, 0x97,
  0x4C, 0xD5, 0x36, 0xE3, 0xF0, 0x1D, 0x5A, 0x94, 0x3C, 0x74, 0xA7, 0x7A, 0x02, 0x00, 0xE2, 0xEC,
  0xCE, 0x40, 0xCB, 0xB8, 0x43, 0x49, 0xC0, 0x15, 0xE5, 0x77, 0x9C, 0x1C, 0x5E, 0x58, 0x9A, 0xC0,
  0xA0, 0x7C, 0xBF, 0x19, 0xEE, 0xEB, 0x69, 0x4A, 0x51, 0x62, 0x3A, 0xAA, 0x32, 0xED, 0x08, 0x66,
  0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x03, 0x01, 0x80, 0x16, 0x3F, 0x2B, 0x7B, 0xC9,
  0x92, 0x53, 0xF4, 0x50, 0x82, 0x08, 0x66, 0xDF, 0x39, 0x62, 0x82, 0x56, 0xB8, 0x4E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1E, 0x80, 0xEB, 0x8C, 0x84, 0x03, 0x52, 0x80, 0x16, 0x57, 0xD9, 0xD6, 0x4B,
  0xB8, 0xA7, 0xFE, 0x0B, 0xB8, 0x01, 0x01, 0x00, 0x01, 0x87, 0x81, 0x82, 0x14, 0x4E, 0x1B, 0xB5,
  0x10, 0x92, 0xE1, 0x22, 0x69, 0xD4, 0x20, 0x17, 0xE7, 0xFE, 0x06, 0xFE, 0x32, 0xD3, 0x49, 0x3B,
  0x0E, 0x3B, 0x29, 0xC0, 0x68, 0x20, 0x04, 0x04, 0x8B, 0x74, 0x77, 0x30, 0xE4, 0xE5, 0x7A, 0x6B,
  0xDB, 0x2E, 0x07, 0x1B
};
size_t g_sample_rse_4_cmhf_size = sizeof(g_sample_rse_4_cmhf);
